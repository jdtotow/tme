kind: ConfigMap
apiVersion: v1
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","data":{"prometheus.yml":"global:\n  scrape_interval:
      15s\nscrape_configs:\n\n- job_name: 'istio-mesh'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n     
      names:\n      - wp3-integration-test\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex:
      istio-telemetry;prometheus\n\n# Scrape config for envoy stats\n- job_name:
      'envoy-stats'\n  metrics_path: /stats/prometheus\n 
      kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_pod_container_port_name]\n    action:
      keep\n    regex: '.*-envoy-prom'\n  - source_labels: [__address__,
      __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action:
      replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:
      $1:15090\n    target_label: __address__\n  - action: labelmap\n    regex:
      __meta_kubernetes_pod_label_(.+)\n  - source_labels:
      [__meta_kubernetes_namespace]\n    action: replace\n    target_label:
      namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action:
      replace\n    target_label: pod_name\n\n- job_name: 'istio-policy'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n     
      names:\n      - wp3-integration-test\n\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex:
      istio-policy;http-monitoring\n\n- job_name: 'istio-telemetry'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n     
      names:\n      - wp3-integration-test\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex:
      istio-telemetry;http-monitoring\n\n- job_name: 'pilot'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n     
      names:\n      - wp3-integration-test\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex:
      istio-pilot;http-monitoring\n\n- job_name: 'galley'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n     
      names:\n      - wp3-integration-test\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex:
      istio-galley;http-monitoring\n\n- job_name: 'citadel'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n     
      names:\n      - wp3-integration-test\n\n  relabel_configs:\n  -
      source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex:
      istio-citadel;http-monitoring\n\n# scrape config for API servers\n# config
      removed\n# scrape config for nodes (kubelet)\n# config removed\n# Scrape
      config for Kubelet cAdvisor.\n#\n# This is required for Kubernetes 1.7.3
      and later, where cAdvisor metrics\n# (those whose names begin with
      'container_') have been removed from the\n# Kubelet metrics endpoint. 
      This job scrapes the cAdvisor endpoint to\n# retrieve those metrics.\n#\n#
      In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the
      cAdvisor\n# HTTP endpoint; use \"replacement:
      /api/v1/nodes/${1}:4194/proxy/metrics\"\n# in that case (and ensure
      cAdvisor's HTTP server hasn't been disabled with\n# the --cadvisor-port=0
      Kubelet flag).\n#\n# This job is not necessary and should be removed in
      Kubernetes 1.6 and\n# earlier versions, or it will cause the metrics to be
      scraped twice.\n# config removed\n# scrape config for service
      endpoints.\n- job_name: 'kubernetes-service-endpoints'\n 
      kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  -
      source_labels:
      [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action:
      keep\n    regex: true\n  - source_labels:
      [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action:
      replace\n    target_label: __scheme__\n    regex: (https?)\n  -
      source_labels:
      [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action:
      replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -
      source_labels: [__address__,
      __meta_kubernetes_service_annotation_prometheus_io_port]\n    action:
      replace\n    target_label: __address__\n    regex:
      ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - action:
      labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -
      source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   
      target_label: kubernetes_namespace\n  - source_labels:
      [__meta_kubernetes_service_name]\n    action: replace\n    target_label:
      kubernetes_name\n  - source_labels: [__meta_kubernetes_service_name,
      __meta_kubernetes_pod_container_port_number]\n    regex:
      prometheus;3001\n    action: drop\n\n- job_name: 'kubernetes-pods'\n 
      kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:  # If first twexternal_labels:
      [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action:
      keep\n    regex: true\n  # Keep target if there's no sidecar or if
      prometheus.io/scheme is explicitly set to \"http\"\n  - source_labels:
      [__meta_kubernetes_pod_annotation_sidecar_istio_io_status,
      __meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action:
      keep\n    regex: ((;.*)|(.*;http))\n  - source_labels:
      [__meta_kubernetes_pod_annotation_istio_mtls]\n    action: drop\n   
      regex: (true)\n  - source_labels:
      [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action:
      replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -
      source_labels: [__address__,
      __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action:
      replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n   
      target_label: __address__\n  - action: labelmap\n    regex:
      __meta_kubernetes_pod_label_(.+)\n  - source_labels:
      [__meta_kubernetes_namespace]\n    action: replace\n    target_label:
      namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action:
      replace\n    target_label: pod_name\n\n- job_name:
      'kubernetes-pods-istio-secure'\n  scheme: https\n  tls_config:\n   
      ca_file: /etc/istio-certs/root-cert.pem\n    cert_file:
      /etc/istio-certs/cert-chain.pem\n    key_file:
      /etc/istio-certs/key.pem\n    insecure_skip_verify: true  # prometheus
      does not support secure naming.\n  kubernetes_sd_configs:\n  - role:
      pod\n  relabel_configs:\n  - source_labels:
      [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action:
      keep\n    regex: true\n  # sidecar status annotation is added by sidecar
      injector and\n  # istio_workload_mtls_ability can be specifically placed
      on a pod to indicate its ability to receive mtls traffic.\n  -
      source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status,
      __meta_kubernetes_pod_annotation_istio_mtls]\n    action: keep\n    regex:
      (([^;]+);([^;]*))|(([^;]*);(true))\n  - source_labels:
      [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action:
      drop\n    regex: (http)\n  - source_labels:
      [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action:
      replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -
      source_labels: [__address__]  # Only keep address that is host:port\n   
      action: keep    # otherwise an extra target with ':443' is added for https
      scheme\n    regex: ([^:]+):(\\d+)\n  - source_labels: [__address__,
      __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action:
      replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n   
      target_label: __address__\n  - action: labelmap\n    regex:
      __meta_kubernetes_pod_label_(.+)\n  - source_labels:
      [__meta_kubernetes_namespace]\n    action: replace\n    target_label:
      namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action:
      replace\n    target_label:
      pod_name"},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"1.1.9-1"},"labels":{"app":"prometheus","app.kubernetes.io/component":"prometheus","app.kubernetes.io/instance":"wp3-integration-test","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"prometheus","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"1.1.9-1","chart":"prometheus","heritage":"Tiller","maistra-version":"1.1.9","maistra.io/owner":"wp3-integration-test","release":"istio"},"name":"prometheus","namespace":"wp3-integration-test","ownerReferences":[{"apiVersion":"maistra.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"test-service","uid":"57affda7-3f38-4475-8bb8-327e3c6da9a8"}]}}
    maistra.io/mesh-generation: 1.1.9-1
  selfLink: /api/v1/namespaces/wp3-integration-test/configmaps/prometheus
  resourceVersion: '140676066'
  name: prometheus
  uid: da24472c-856e-4082-b8db-f84eb5946dbf
  creationTimestamp: '2020-06-12T06:29:01Z'
  managedFields:
    - manager: istio-operator
      operation: Update
      apiVersion: v1
      time: '2020-10-06T02:12:02Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:prometheus.yml': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
            'f:maistra.io/mesh-generation': {}
          'f:labels':
            'f:maistra.io/owner': {}
            'f:app.kubernetes.io/managed-by': {}
            'f:chart': {}
            'f:app': {}
            'f:app.kubernetes.io/name': {}
            .: {}
            'f:app.kubernetes.io/part-of': {}
            'f:release': {}
            'f:heritage': {}
            'f:app.kubernetes.io/version': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/component': {}
            'f:maistra-version': {}
          'f:ownerReferences':
            .: {}
            'k:{"uid":"57affda7-3f38-4475-8bb8-327e3c6da9a8"}':
              .: {}
              'f:apiVersion': {}
              'f:blockOwnerDeletion': {}
              'f:controller': {}
              'f:kind': {}
              'f:name': {}
              'f:uid': {}
  namespace: wp3-integration-test
  ownerReferences:
    - apiVersion: maistra.io/v1
      kind: ServiceMeshControlPlane
      name: test-service
      uid: 57affda7-3f38-4475-8bb8-327e3c6da9a8
      controller: true
      blockOwnerDeletion: true
  labels:
    app: prometheus
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/instance: wp3-integration-test
    release: istio
    app.kubernetes.io/version: 1.1.9-1
    app.kubernetes.io/component: prometheus
    maistra-version: 1.1.9
    app.kubernetes.io/managed-by: maistra-istio-operator
    maistra.io/owner: wp3-integration-test
    app.kubernetes.io/name: prometheus
    chart: prometheus
    heritage: Tiller
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
    scrape_configs:

    - job_name: 'istio-mesh'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - wp3-integration-test

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-telemetry;prometheus

    # Scrape config for envoy stats
    - job_name: 'envoy-stats'
      metrics_path: /stats/prometheus
      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: '.*-envoy-prom'
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:15090
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

    - job_name: 'istio-policy'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - wp3-integration-test


      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-policy;http-monitoring

    - job_name: 'istio-telemetry'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - wp3-integration-test

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-telemetry;http-monitoring

    - job_name: 'pilot'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - wp3-integration-test

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-pilot;http-monitoring

    - job_name: 'galley'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - wp3-integration-test

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-galley;http-monitoring

    - job_name: 'citadel'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - wp3-integration-test

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-citadel;http-monitoring

    # scrape config for API servers
    # config removed
    # scrape config for nodes (kubelet)
    # config removed
    # Scrape config for Kubelet cAdvisor.
    #
    # This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics
    # (those whose names begin with 'container_') have been removed from the
    # Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to
    # retrieve those metrics.
    #
    # In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor
    # HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"
    # in that case (and ensure cAdvisor's HTTP server hasn't been disabled with
    # the --cadvisor-port=0 Kubelet flag).
    #
    # This job is not necessary and should be removed in Kubernetes 1.6 and
    # earlier versions, or it will cause the metrics to be scraped twice.
    # config removed
    # scrape config for service endpoints.
    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number]
        regex: prometheus;3001
        action: drop

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Keep target if there's no sidecar or if prometheus.io/scheme is explicitly set to "http"
      - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: keep
        regex: ((;.*)|(.*;http))
      - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]
        action: drop
        regex: (true)
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

    - job_name: 'kubernetes-pods-istio-secure'
      scheme: https
      tls_config:
        ca_file: /etc/istio-certs/root-cert.pem
        cert_file: /etc/istio-certs/cert-chain.pem
        key_file: /etc/istio-certs/key.pem
        insecure_skip_verify: true  # prometheus does not support secure naming.
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # sidecar status annotation is added by sidecar injector and
      # istio_workload_mtls_ability can be specifically placed on a pod to indicate its ability to receive mtls traffic.
      - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status, __meta_kubernetes_pod_annotation_istio_mtls]
        action: keep
        regex: (([^;]+);([^;]*))|(([^;]*);(true))
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: drop
        regex: (http)
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__]  # Only keep address that is host:port
        action: keep    # otherwise an extra target with ':443' is added for https scheme
        regex: ([^:]+):(\d+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name
