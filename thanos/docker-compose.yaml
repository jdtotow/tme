version: '3.1'

volumes:
    prometheus1_data: {}
    prometheus2_data: {}
    grafana_data: {}
    minio_data: {}

services:
  prometheus-1:
    container_name: prometheus-1
    image: prom/prometheus:v2.15.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus1_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus1.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9081:9090
    restart: always

  prometheus-2:
    container_name: prometheus-2
    image: prom/prometheus:v2.15.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus2_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus2.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9082:9090
    restart: always

  thanos-sidecar-1:
    container_name: sidecar-1
    image: quay.io/thanos/thanos:v0.10.0
    volumes:
      - ./thanos/:/etc/thanos/
      - prometheus1_data:/prometheus
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus-1:9090'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
    depends_on:
      - prometheus-1
      - minio
    restart: always

  thanos-sidecar-2:
    container_name: sidecar-2
    image: quay.io/thanos/thanos:v0.10.0
    volumes:
      - ./thanos/:/etc/thanos/
      - prometheus2_data:/prometheus
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus-2:9090'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
    depends_on:
      - prometheus-2
      - minio
    restart: always

  thanos-querier:
    container_name: querier 
    image: quay.io/thanos/thanos:v0.10.0
    command:
      - 'query'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--query.replica-label=replica'
      - '--store=thanos-sidecar-1:10091'
      - '--store=thanos-sidecar-2:10091'
      - '--store=thanos-store-gateway:10091'
    ports:
      - 10902:10902
    depends_on:
      - thanos-sidecar-1
      - thanos-sidecar-2
    restart: always

  thanos-store-gateway:
    container_name: gateway
    image: quay.io/thanos/thanos:v0.10.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'store'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--data-dir=/tmp/thanos/store'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
    depends_on:
      - minio
    restart: always

  thanos-compactor:
    container_name: compactor
    image: quay.io/thanos/thanos:v0.10.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'compact'
      - '--log.level=debug'
      - '--data-dir=/data'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
      - '--wait'
    depends_on:
      - minio
    restart: always

  thanos-ruler:
    container_name: ruler 
    image: quay.io/thanos/thanos:v0.10.0
    volumes:
      - ./thanos/:/etc/thanos/
    command:
      - 'rule'
      - '--grpc-address=0.0.0.0:10091'
      - '--http-address=0.0.0.0:10902'
      - '--log.level=debug'
      - '--data-dir=/data'
      - '--eval-interval=15s'
      - '--rule-file=/etc/thanos/*.rules.yaml'
      - '--alertmanagers.url=http://alertmanager:9093'
      - '--query=thanos-querier:10902'
      - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
      - "--label=ruler_cluster=\"vegas\""
      - "--label=ruler_replica=\"r1\""
    ports:
      - 10903:10902
    depends_on:
      - minio
      - thanos-querier
    restart: always
    
  minio:
    image: minio/minio:RELEASE.2020-01-03T19-12-21Z
    container_name: minio 
    volumes:
      - minio_data:/data
    entrypoint: sh
    command: -c 'mkdir -p /data/thanos-bucket && /usr/bin/minio server /data'
    environment:
      - MINIO_ACCESS_KEY=smth
      - MINIO_SECRET_KEY=Need8Chars
    ports:
      - 9000:9000
  
  node-exporter:
    container_name: node-exporter 
    image: prom/node-exporter:v0.18.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9101:9100
    restart: always
  
  grafana:
    container_name: grafana 
    image: grafana/grafana:6.5.2
    ports:
      - 3000:3000
    restart: always